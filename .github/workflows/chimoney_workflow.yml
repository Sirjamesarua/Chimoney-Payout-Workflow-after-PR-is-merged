name: Chimoney Workflow

# on:
#   pull_request:
#     types:
#       - closed

on: push

jobs:
  chimoney_payout:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Merge
        id: pr_merge
        run: echo "is_merged=${{ github.event.pull_request.merged }}" >> $GITHUB_OUTPUT

      - name: Notify Maintainer
        uses: actions/github-script@v5
        with:
          script: |
            const maintainer = 'maintainer_username'; // GitHub username of the maintainer
            const message = `Hello @${maintainer}, there's new activity in this repo!`; // The message to be posted
      
            // Fetches the issue number from the context of the event that triggered the workflow. 
            // If the event was a pull request, it uses the pull request number. 
            // If it was a push event, it uses the commit SHA.
            const issue_number = context.payload.pull_request ? context.payload.pull_request.number : context.sha;
      
            // Defines the repository for which the comment should be created
            const repo = context.repo;
            repo.issue_number = issue_number;
      
            // Uses the GitHub API to create a comment on the specified repository
            github.issues.createComment({...repo, body: message});

      # - name: Notify Maintainers
      #   # if: steps.pr_merge.outputs.is_merged == 'true'
      #   # uses: actions/github-script@v5
      #   with:
      #     script: |
      #       // Mention the user who created the PR
      #       const maintainer = 'sirjamesarua';
      #       const user = `@${{ github.event.pull_request.user.login }}`;
      #       const message = `Hello @${maintainer}, PR Merged by ${user}. Please send them Chimoney to cash out to a bank account, gift card, and other options.`;

      #       // Create a comment in the PR or commit
      #       const issue_number = ${{ github.event.pull_request.number }};
      #       const repo = ${{ github.repository.repo }};
      #       repo.issue_number = issue_number;
      #       # github.issues.createComment({...repo, body: message});


      # - name: Initiate Chimoney Payout
      #   if: steps.pr_merge.outputs.is_merged == 'true'
      #   run: |
      #     # Call Chimoney API to initiate the payout
      #     # Replace 'your_api_key' with the actual secret name for your Chimoney API key
      #     curl -X POST -H "Authorization: Bearer ${{ secrets.your_api_key }}" -d '{
      #       "user": "Ajiboso-Adeola",
      #       "amount": 2,
      #       "payment_method": "bank_account"  # Replace with the desired payment method
      #     }' https://api.chimoney.io/v0.2/payouts/initiate-chimoney

      # - name: Bot Response
      #   if: steps.pr_merge.outputs.is_merged == 'true'
      #   run: |
      #     # Handle the bot response and provide the payment link
